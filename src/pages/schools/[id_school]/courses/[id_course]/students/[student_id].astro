---
import Layout from "@/layouts/Layout.astro";
import { db, eq, School, Course, Student } from "astro:db";

export const prerender = false;

const { id_school, id_course, student_id } = Astro.params;

// Validar parámetros
if (!id_school || !id_course || !student_id) {
  return new Response("Parámetros inválidos", {
    status: 400,
    statusText: "Bad Request",
  });
}

// Obtener datos de la escuela, curso y estudiante
const [school, course, student] = await Promise.all([
  db.select().from(School).where(eq(School.id, id_school)).then((res) => res[0]),
  db.select().from(Course).where(eq(Course.id, id_course)).then((res) => res[0]),
  db.select().from(Student).where(eq(Student.id, student_id)).then((res) => res[0]),
]);

// Validar existencia de los recursos
if (!school || !course || !student) {
  return new Response("Recurso no encontrado", {
    status: 404,
    statusText: "Not Found",
  });
}

// Verificar que el curso pertenece a la escuela y que el estudiante está inscrito en el curso
if (course.school_course !== school.id || student.course_student !== course.id) {
  return new Response("El estudiante no pertenece al curso o la escuela especificados", {
    status: 400,
    statusText: "Bad Request",
  });
}
---

<Layout>
  <section class="p-4">
    <div class="mb-6">
      <a href={`/schools/${school.id}/courses/${course.id}`} class="text-orange-600 hover:underline">
        &larr; Volver a {course.name}
      </a>
    </div>

    <h1 class="text-3xl font-bold mb-2 dark:text-white">Perfil del Estudiante</h1>

    <div class="bg-white shadow rounded-lg p-4">
      <h2 class="text-2xl font-semibold mb-4 dark:text-white">{student.name}</h2>
      <p class="mb-2"><strong>ID:</strong> {student.id}</p>
      <p class="mb-2"><strong>Correo:</strong> {student.email}</p>
      <!-- Puedes agregar más información del estudiante aquí -->
    </div>
  </section>
</Layout>
