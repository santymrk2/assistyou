---
import Layout from "../../../../layouts/Layout.astro";
import { db, eq, School, Course, Student } from "astro:db";

export const prerender = false;

const { id_school, id_course } = Astro.params;

// Validar parámetros
if (!id_school || !id_course) {
  return new Response("Parámetros inválidos", {
    status: 400,
    statusText: "Bad Request",
  });
}

// Obtener datos
const [school, course] = await Promise.all([
  db
    .select()
    .from(School)
    .where(eq(School.id, id_school))
    .then((res) => res[0]),
  db
    .select()
    .from(Course)
    .where(eq(Course.id, id_course))
    .then((res) => res[0]),
]);

// Validar existencia
if (!school || !course) {
  return new Response("Recurso no encontrado", {
    status: 404,
    statusText: "Not Found",
  });
}

// Verificar que el curso pertenece a la escuela
if (course.school_course !== school.id) {
  return new Response("El curso no pertenece a esta escuela", {
    status: 400,
    statusText: "Bad Request",
  });
}

const students = await db
  .select()
  .from(Student)
  .where(eq(Student.course_student, course.id));
---

<Layout>
  <section class="p-4">
    <div class="mb-6">
      <a href={`/schools/${school.id}`} class="text-orange-600 hover:underline">
        &larr; Volver a {school.name}
      </a>
    </div>

    <h1 class="text-3xl font-bold mb-2 dark:text-white">{course.name}</h1>

    <!-- Menú de navegación -->
    <div class="grid grid-cols-3 gap-2 mb-4">
      <div id="alumnosNav" class="cursor-pointer bg-gray-100 rounded-lg shadow p-2 flex items-center justify-center">
        <a class="text-center text-md font-bold dark:text-zinc-900">Alumnos</a>
      </div>
      <div id="asistenciaNav" class="cursor-pointer bg-gray-100 rounded-lg shadow p-2 flex items-center justify-center">
        <a class="text-center text-md font-bold dark:text-zinc-900">Asistencia</a>
      </div>
      <div id="examenesNav" class="cursor-pointer bg-gray-100 rounded-lg shadow p-2 flex items-center justify-center">
        <a class="text-center text-md font-bold dark:text-zinc-900">Examenes</a>
      </div>
    </div>

    <!-- Sección de alumnos -->
    <div id="alumnosSection">
      {students.length === 0 ? (
        <p class="text-gray-400">
          No hay estudiantes registrados en este curso.
        </p>
      ) : (
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-100 dark:bg-zinc-900">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                </th>
                {/* Agrega más encabezados de columna si se requieren otras características */}
              </tr>
            </thead>
            <tbody class="bg-white dark:bg-zinc-900 divide-y divide-gray-200">
              {students.map((student) => (
                <tr class="hover:bg-gray-100 dark:hover:bg-zinc-800">
                  <td class="px-6 py-4 whitespace-nowrap dark:text-white ">
                    <a href={`/schools/${school.id}/courses/${course.id}/students/${student.id}`}>
                      {student.name} 
                    </a>
                  </td>
                  {/* Agrega más celdas para otras características del alumno */}
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
    </div>

    <!-- Sección de asistencia -->
    <div id="asistenciaSection" style="display: none;">
      <div class="mt-8">
        <h2 class="text-2xl font-semibold mb-4 dark:text-white">Asistencias</h2>
        <p class="text-gray-400">
          No hay asistencias registradas para este curso.
        </p>
        <button
          class="bg-orange-600 hover:bg-orange-700 text-zinc-900 font-semibold px-4 py-2 rounded-lg mt-4"
        >
          Agregar asistencia
        </button>
      </div>
    </div>

    <!-- Sección de examenes -->
    <div id="examenesSection" style="display: none;">
      <div class="mt-8">
        <h2 class="text-2xl font-semibold mb-4 dark:text-white">Examenes</h2>
        <p class="text-gray-400">
          No hay examenes registrados para este curso.
        </p>
        <button
          class="bg-orange-600 hover:bg-orange-700 text-zinc-900 font-semibold px-4 py-2 rounded-lg mt-4"
        >
          Agregar examen
        </button>
      </div>
    </div>

  </section>
</Layout>

<script>
  // Esperamos a que se cargue el DOM
  document.addEventListener('DOMContentLoaded', () => {
    const sections = {
      alumnos: document.getElementById('alumnosSection'),
      asistencia: document.getElementById('asistenciaSection'),
      examenes: document.getElementById('examenesSection')
    };

    const navLinks = {
      alumnos: document.getElementById('alumnosNav'),
      asistencia: document.getElementById('asistenciaNav'),
      examenes: document.getElementById('examenesNav')
    };

    function setActive(section) {
      // Ocultamos todas las secciones
      Object.values(sections).forEach(sec => sec.style.display = 'none');
      // Reiniciamos estilos de navegación: eliminamos el estilo activo y dejamos el fondo gris
      Object.values(navLinks).forEach(nav => {
        nav.classList.remove('bg-orange-600', 'text-white', 'font-black');
        nav.classList.add('bg-gray-100');
      });

      // Mostramos la sección seleccionada
      sections[section].style.display = 'block';
      // Aplicamos el estilo activo a la opción seleccionada
      navLinks[section].classList.remove('bg-gray-100');
      navLinks[section].classList.add('bg-orange-600', 'text-white', 'font-black');
    }

    // Asignamos los eventos click a cada opción del menú
    navLinks.alumnos.addEventListener('click', () => setActive('alumnos'));
    navLinks.asistencia.addEventListener('click', () => setActive('asistencia'));
    navLinks.examenes.addEventListener('click', () => setActive('examenes'));

    // Por defecto se muestra la sección de alumnos
    setActive('alumnos');
  });
</script>
