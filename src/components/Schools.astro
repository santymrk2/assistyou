---
import Modal from "../components/Modal.astro";

const { schools } = Astro.props;

export const prerender = false;
---

<div class="flex flex-col items-center">
    <div
        class="flex justify-between items-center w-full md:max-w-xl max-w-2xl mb-6"
    >
        <h1 class="text-center text-2xl font-black text-white">Escuelas</h1>
        <button
            id="addSchoolBtn"
            class="bg-orange-600 hover:bg-orange-700 text-white font-bold mx-4 rounded-lg transition-colors"
        >
            <svg
                class="stroke-2 stroke-white size-8 group-hover:stroke-zinc-700"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
            >
                <path
                    d="M7 12h5m0 0h5m-5 0V7m0 5v5"
                    stroke-linecap="round"
                    stroke-linejoin="round"></path>
            </svg>
        </button>
    </div>

    <div class="flex flex-col sm:flex-row gap-4 flex-wrap justify-center">
        {
            schools.map(({ id, name }) => (
                <div class="bg-orange-600 hover:bg-orange-700 rounded-xl flex flex-col items-center">
                    <a
                        href={`/${id}`}
                        class="text-white text-lg font-extrabold text-center px-6 py-4"
                    >
                        {name}
                    </a>
                </div>
            ))
        }
    </div>

    <!-- Modal para a침adir escuela -->
    <Modal id="SchoolModal" title="A침adir Nueva Escuela">
        <div>
            <label for="schoolName" class="block mb-2 dark:text-white"
                >Nombre de la Escuela</label
            >
            <input
                type="text"
                id="schoolName"
                class="w-full p-2 border rounded-lg dark:bg-zinc-700 dark:text-white dark:border-zinc-600"
                required
            />
        </div>
    </Modal>
</div>

<script>
    import { $ } from "../lib/dom-selector";

    const $addSchoolBtn = $("#addSchoolBtn");
    const $schoolForm = $("#SchoolModalForm");

    // Mostrar modal
    if ($addSchoolBtn) {
        // Usar una aserci칩n de tipo
        ($addSchoolBtn as HTMLElement).addEventListener("click", () => {
            (window as any).showSchoolModal();
        });
    }

    // Enviar formulario
    if ($schoolForm) {
        $schoolForm.onsubmit = async (e) => {
            e.preventDefault();

            const schoolName = ($("#schoolName") as HTMLInputElement).value;

            if (!schoolName) return;

            try {
                const response = await fetch("/api/schools", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ name: schoolName }),
                });

                if (response.ok) {
                    // Recargar la p치gina para mostrar la nueva escuela
                    window.location.reload();
                } else {
                    console.error("Error al crear la escuela");
                }
            } catch (error) {
                console.error("Error:", error);
            }
        };
    }
</script>
